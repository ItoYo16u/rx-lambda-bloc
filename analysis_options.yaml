#include: package:pedantic_mono/analysis_options.yaml
include: package:pedantic/analysis_options.yaml

analyzer:
  enable-experiment:
    - extension-methods
  errors:
    missing_required_param: warning
    missing_return: warning
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false
linter:
  rules:
    # For Provider, `context.select((Type t) => ...)` is often used.
    # - avoid_types_on_closure_parameters
    - avoid_void_async
    - await_only_futures
    - camel_case_types
    - cancel_subscriptions
    - close_sinks
    - constant_identifier_names
    - control_flow_in_finally
    - empty_statements
    - hash_and_equals
    - implementation_imports
    - non_constant_identifier_names
    - package_api_docs
    - package_names
    - package_prefixed_library_names
    - test_types_in_equals
    - throw_in_finally
    - unnecessary_brace_in_string_interps
    - unnecessary_getters_setters
    - unnecessary_statements
#    - always_put_control_body_on_new_line
    - annotate_overrides
    - avoid_bool_literals_in_conditional_expressions
    - avoid_catches_without_on_clauses
    - avoid_catching_errors
    #    - avoid_classes_with_only_static_members # staticしか持たないclassはいらない
    - avoid_double_and_int_checks
    - avoid_field_initializers_in_const_classes
    - avoid_function_literals_in_foreach_calls
    - avoid_implementing_value_types
    - avoid_js_rounded_ints
    - avoid_null_checks_in_equality_operators
    - avoid_positional_boolean_parameters
    - avoid_private_typedef_functions
    - avoid_renaming_method_parameters
    - avoid_returning_null
    # Not work as documented: https://dart-lang.github.io/linter/lints/avoid_returning_null_for_future.html
    #    - avoid_returning_null_for_future
    - avoid_returning_null_for_void
    - avoid_returning_this
    - avoid_setters_without_getters
    - avoid_single_cascade_in_expression_statements
    - avoid_slow_async_io
    - avoid_unused_constructor_parameters
    - cascade_invocations
    - comment_references
    - directives_ordering
    - file_names
    #    - flutter_style_todos  # flutter TODO format
    - invariant_booleans
    - iterable_contains_unrelated_type
    - join_return_with_assignment
    #    - lines_longer_than_80_chars  # 一行に80文字以内
    - list_remove_unrelated_type
    - literal_only_boolean_expressions
    - no_adjacent_strings_in_list
    #    - omit_local_variable_types  # ローカル変数の型宣言はなし
    - one_member_abstracts
    - only_throw_errors
    - overridden_fields
    - parameter_assignments
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_constructors_over_static_methods
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_foreach
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_initializing_formals
    - prefer_int_literals
    - prefer_interpolation_to_compose_strings
    - prefer_null_aware_operators
    - prefer_single_quotes
    - prefer_typing_uninitialized_variables
    - prefer_void_to_null
    #    - sort_constructors_first  # コンストラクタを最初にかく
    - sort_pub_dependencies
    - sort_unnamed_constructors_first
    - type_annotate_public_apis
    - unnecessary_await_in_return
    - unnecessary_lambdas
    - unnecessary_null_aware_assignments
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_this
    - use_function_type_syntax_for_parameters
    - use_setters_to_change_properties
    - use_string_buffers
    - use_to_and_as_if_applicable
    - void_checks